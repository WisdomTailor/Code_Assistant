{
  "version": "0.2.0",
  "compounds": [
    {
      "name": "Debug OpenAI Jarvis and Voice Jarvis",
      "configurations": ["OpenAI Jarvis", "Voice Jarvis"],
      "preLaunchTask": "", // Optional: Specify a task to run before launching the debug session
      "presentation": {
        "group": "", // Optional: Group in the Debug viewlet
        "order": 0 // Optional: Order within the group
      }
    },
    {
      "name": "Services",
      "configurations": ["Document Ingestion API", "Celery Worker"],
      "preLaunchTask": "", // Optional: Specify a task to run before launching the debug session
      "presentation": {
        "group": "", // Optional: Group in the Debug viewlet
        "order": 0 // Optional: Order within the group
      }
    }
  ],
  "configurations": [
    {
      "name": "Discord RAG Bot",
      "type": "debugpy",
      "request": "launch",
      "program": "src/discord/bot.py",
      "args": ["--logging_level=DEBUG"],
      "env": {
        "DISCORD_BOT_TARGET_CHANNEL_NAME": "experimental",
        "DISCORD_BOT_CONVERSATION_TEMPLATE": "DISCORD_TEMPLATE",
        "DISCORD_BOT_TYPE": "RAG",
        "DISCORD_COLLECTION_ID": "25",
        "DISCORD_INTERACTION_ID": "d0b6b88f-0dae-4063-8018-d58836c36388"
      },
      //"cwd": "${workspaceFolder}",
      "console": "integratedTerminal",
      "justMyCode": true
    },
    {
      "name": "Discord Llava Bot",
      "type": "debugpy",
      "request": "launch",
      "program": "src/discord/bot.py",
      "args": ["--logging_level=DEBUG"],
      "env": {
        "DISCORD_BOT_TARGET_CHANNEL_NAME": "images",
        "DISCORD_BOT_CONVERSATION_TEMPLATE": "DISCORD_IMAGE_TEMPLATE",
        "DISCORD_BOT_TYPE": "RAG",
        "DISCORD_COLLECTION_ID": "26",
        "DISCORD_INTERACTION_ID": "0e53ef35-d487-4680-8fc9-ac4329d80601"
      },
      "console": "integratedTerminal",
      "justMyCode": true
    },
    {
      "name": "Discord Conversation Bot",
      "type": "debugpy",
      "request": "launch",
      "program": "src/discord/bot.py",
      "args": ["--logging_level=DEBUG"],
      "env": {
        "DISCORD_BOT_TARGET_CHANNEL_NAME": "experimental",
        "DISCORD_BOT_CONVERSATION_TEMPLATE": "DISCORD_TEMPLATE",
        "DISCORD_BOT_TYPE": "conversrational"
      },
      //"cwd": "${workspaceFolder}",
      "console": "integratedTerminal",
      "justMyCode": true
    },
    {
      "name": "OpenAI Jarvis",
      "type": "debugpy",
      "request": "launch",
      "program": "assistant_venv/Scripts/streamlit.exe",
      "args": [
        "run",
        "src/ui/app/About.py",
        "--server.port=${input:randomPort}"
      ],
      "cwd": "${workspaceFolder}",
      "console": "integratedTerminal",
      "env": {
        "PYTHONPATH": "${workspaceRoot}",
        "POSTGRES_HOST": "localhost",
        "POSTGRES_PORT": "5432",
        "LIBRE_OFFICE_PATH": "/Program Files/LibreOffice/program/soffice.exe"
      },
      "justMyCode": true
    },
    {
      "name": "Susan's Jarvis",
      "type": "debugpy",
      "request": "launch",
      "program": "assistant_venv/Scripts/streamlit.exe",
      "args": ["run", "About.py", "--server.port=${input:randomPort}"],
      "cwd": "${workspaceFolder}",
      "console": "integratedTerminal",
      "env": {
        "PYTHONPATH": "${workspaceRoot}",
        "POSTGRES_HOST": "localhost",
        "POSTGRES_PORT": "6969",
        "LIBRE_OFFICE_PATH": "/Program Files/LibreOffice/program/soffice.exe",
        "USER_EMAIL": "susanmae1129@gmail.com"
      },
      "justMyCode": true
    },
    {
      "name": "Voice Jarvis",
      "type": "debugpy",
      "request": "launch",
      "program": "src/ai/voice_ai.py",
      "console": "integratedTerminal",
      "justMyCode": true
    },
    {
      "name": "Run Gitlab Issue Creator",
      "type": "debugpy",
      "request": "launch",
      "program": "src/integrations/gitlab/gitlab_issue_creator.py",
      "args": [],
      "console": "integratedTerminal",
      "justMyCode": true
    },
    {
      "name": "Document Ingestion API",
      "type": "debugpy",
      "request": "launch",
      "module": "uvicorn",
      "args": [
        "document_ingestion:router",
        "--reload",
        "--host=0.0.0.0",
        "--port=8000"
      ],
      "jinja": false,
      "console": "integratedTerminal",
      "cwd": "${workspaceFolder}/src/services"
    },
    {
      "name": "Celery Worker",
      "type": "debugpy",
      "request": "launch",
      "module": "celery",
      "args": [
        "-A",
        "celery_worker",
        "worker",
        "--loglevel=info",
        "-P",
        "solo"
      ],
      "env": {
        "POSTGRES_HOST": "localhost",
        "POSTGRES_PORT": "5432",
        "RABBITMQ_HOST": "localhost"
      },
      "pythonArgs": ["-Xfrozen_modules=off"],
      "console": "integratedTerminal",
      "justMyCode": true,
      "cwd": "${workspaceFolder}/src/workers/document_processing/app"
    },
    {
      "name": "Run Gitlab File Retriever",
      "type": "debugpy",
      "request": "launch",
      "program": "src/integrations/gitlab/gitlab_file_retriever.py",
      "args": [],
      "console": "integratedTerminal",
      "justMyCode": true
    },
    {
      "name": "Run Gitlab Issue Retriever",
      "type": "debugpy",
      "request": "launch",
      "program": "src/integrations/gitlab/gitlab_issue_retriever.py",
      "args": [],
      "console": "integratedTerminal",
      "justMyCode": true
    },
    {
      "name": "Run Gitlab Merge Request Retriever",
      "type": "debugpy",
      "request": "launch",
      "program": "src/integrations/gitlab/gitlab_merge_request_retriever.py",
      "args": [],
      "console": "integratedTerminal",
      "justMyCode": true
    },
    {
      "name": "C/C++ Runner: Debug Session",
      "type": "cppdbg",
      "request": "launch",
      "args": [],
      "stopAtEntry": false,
      "externalConsole": true,
      "cwd": "c:/Repos/sample_docs/cpp/Dave/StateMachine",
      "program": "c:/Repos/sample_docs/cpp/Dave/StateMachine/build/Debug/outDebug",
      "MIMode": "gdb",
      "miDebuggerPath": "gdb",
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        }
      ]
    }
  ],
  "inputs": [
    {
      "id": "randomPort",
      "type": "command",
      "command": "extension.commandvariable.number",
      "args": {
        "name": "randomPort",
        "range": [1500, 60000],
        "random": true,
        "uniqueCount": 10
      }
    },
    {
      "id": "rememberRandomPort",
      "type": "command",
      "command": "extension.commandvariable.remember",
      "args": {
        "key": "number-randomPort"
      }
    }
  ]
}
