{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    // Refactor these to work with the new docker / streamlit setup
    // {
    //   "name": "Run Llama2 LLM Streamlit App",
    //   "type": "python",
    //   "request": "launch",
    //   "program": "assistant_venv/Scripts/streamlit.exe",
    //   "args": ["run", "${workspaceFolder}/src/runners/ui/streamlit_ui.py"],
    //   "cwd": "${workspaceFolder}/src",
    //   "console": "integratedTerminal",
    //   "env": {
    //     "ASSISTANT_CONFIG_PATH": "configurations/console_configs/llama2_config.json"
    //   }
    // },
    // {
    //   "name": "Run Aron LLM Streamlit App",
    //   "type": "python",
    //   "request": "launch",
    //   "program": "assistant_venv/Scripts/streamlit.exe",
    //   "args": ["run", "${workspaceFolder}/src/runners/ui/streamlit_ui.py"],
    //   "cwd": "${workspaceFolder}/src",
    //   "console": "integratedTerminal",
    //   "env": {
    //     "ASSISTANT_CONFIG_PATH": "configurations/console_configs/aron_llm_config.json"
    //   }
    // },
    // {
    //   "name": "Run Luna AI LLM Streamlit App",
    //   "type": "python",
    //   "request": "launch",
    //   "program": "assistant_venv/Scripts/streamlit.exe",
    //   "args": ["run", "${workspaceFolder}/src/runners/ui/streamlit_ui.py"],
    //   "cwd": "${workspaceFolder}/src",
    //   "console": "integratedTerminal",
    //   "env": {
    //     "ASSISTANT_CONFIG_PATH": "configurations/console_configs/luna_config.json"
    //   }
    // },
    {
      "name": "OpenAI Jarvis",
      "type": "python",
      "request": "launch",
      "program": "assistant_venv/Scripts/streamlit.exe",
      "args": ["run", "streamlit_ui.py", "--server.port=${input:randomPort}"],
      "cwd": "${workspaceFolder}",
      "console": "integratedTerminal",
      "env": {
        "PYTHONPATH": "${workspaceRoot}",
        "ASSISTANT_CONFIG_PATH": "configurations/console_configs/openai_config.json",
        "POSTGRES_HOST": "localhost",
        "USER_EMAIL":"aronweiler@gmail.com",
        "LIBRE_OFFICE_PATH":"/Program Files/LibreOffice/program/soffice.exe"

      },
      "justMyCode": true
    },
    {
      "name": "Susan's Jarvis",
      "type": "python",
      "request": "launch",
      "program": "assistant_venv/Scripts/streamlit.exe",
      "args": ["run", "streamlit_ui.py"],
      "cwd": "${workspaceFolder}",
      "console": "integratedTerminal",
      "env": {
        "PYTHONPATH": "${workspaceRoot}",
        "ASSISTANT_CONFIG_PATH": "configurations/console_configs/homework_openai_config.json",
        "POSTGRES_HOST": "localhost",
        "POSTGRES_PORT":"6969",
        "USER_EMAIL":"susanmae1129@gmail.com"
      }
    },
    {
      "name": "Run OpenAI Assistant Console",
      "type": "python",
      "request": "launch",
      "program": "src/run.py",
      "args": [
        "--config=configurations/console_configs/openai_config.json",
        "--logging_level=DEBUG"
      ],
      "console": "integratedTerminal",
      "justMyCode": false
    },
    {
      "name": "Run Llama 2 Assistant Console",
      "type": "python",
      "request": "launch",
      "program": "src/run.py",
      "args": [
        "--config=configurations/console_configs/llama2_config.json",
        "--logging_level=DEBUG"
      ],
      "console": "integratedTerminal",
      "justMyCode": false
    }
    // Need to get this working again
    // {
    //   "name": "Run Voice LLM",
    //   "type": "python",
    //   "request": "launch",
    //   "program": "src/run.py",
    //   "args": [
    //     "--config=configurations/voice_configs/voice_config.json",
    //     "--logging_level=INFO"
    //   ],
    //   "console": "integratedTerminal",
    //   "justMyCode": true
    // }
  ],
  "inputs": [
    {
      "id": "randomPort",
      "type": "command",
      "command": "extension.commandvariable.number", // Requires Command Variable extension
      "args": {
        "name": "randomPort",
        "range": [1500, 60000],
        "random": true,
        "uniqueCount": 10
      }
    },
    {
      "id": "rememberRandomPort",
      "type": "command",
      "command": "extension.commandvariable.remember",
      "args": { "key": "number-randomPort" }
    }
  ]
}
